<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.holacampus.api.mappers.UserMapper">
    
    <resultMap id="userResult" type="User">
        <id     column="user_id"    property="id" />
        <result column="user_firstname"  property="name.firstName" />
        <result column="user_lastname"   property="name.lastName" />
        <result column="user_birth" property="birthDate" />
        <result column="user_gender" property="gender" />
        <result column="user_type"  property="userType" />
        <association property="profilePhoto" column="photo_id" javaType="Photo"
            resultMap="com.holacampus.api.mappers.PhotoMapper.photoEmbeddedResult"/>
    </resultMap>
    
    
    <resultMap id="userEmbeddedResult" type="User">
        <id     column="user_id" property="id" />
        <result column="user_firstname"  property="name.firstName" />
        <result column="user_lastname"   property="name.lastName" /> 
        <association property="profilePhoto" column="photo_id" javaType="Photo"
            resultMap="com.holacampus.api.mappers.PhotoMapper.photoEmbeddedResult"/>
    </resultMap>
    
    <select id="getAllUsers" parameterType="map" resultMap="userResult">
        select  U.UserID        as user_id, 
                U.FirstName     as user_firstname,
                U.LastName      as user_lastname,
                U.BirthDate     as user_birth,
                U.Gender        as user_gender,
                U.Type          as user_type,
        
                P.PhotoID               as photo_e_id,
                P.Title                 as photo_e_title,
                P.Url                   as photo_e_url,
                P.ThumbnailUrl          as photo_e_t_url,
                P.CreationDate          as photo_e_date
        from user U
            left join profile_photo PP
                on U.UserID = PP.UserID
            left join photo P
                on PP.PhotoID = P.PhotoID
            where U.Type='STUDENT'
            <if test="q != null">
                AND match(FirstName,LastName) against(#{q})
            </if>
    </select>
    
    <select id="getTotalUsers" parameterType="map" resultType="int">
        select COUNT(U.UserID) from user U
        where Type='STUDENT'
        <if test="q != null">
                AND match(FirstName,LastName) against(#{q})
        </if>
    </select>
    
    <select id="getUser" parameterType="long" resultMap="userResult">
        select  U.UserID        as user_id, 
                U.FirstName     as user_firstname,
                U.LastName      as user_lastname,
                U.BirthDate     as user_birth,
                U.Gender        as user_gender,
                U.Type          as user_type,
        
                P.PhotoID               as photo_e_id,
                P.Title                 as photo_e_title,
                P.Url                   as photo_e_url,
                P.ThumbnailUrl          as photo_e_t_url,
                P.CreationDate          as photo_e_date
        from user U
            left join profile_photo PP
                on U.UserID = PP.UserID
            left join photo P
                on PP.PhotoID = P.PhotoID
            where U.UserID = #{id}
    </select>
    
    <select id="getCommentContainer" parameterType="long" resultMap="com.holacampus.api.mappers.CommentContainerMapper.cContainerResult">
        select  C.CommentContainerID as cc_id,
                C.Type as cc_type,
                C.UserID as cc_owner_id
        from comment_container C
            where UserID = #{id}
    </select>
    
    <select id="getPhotoContainer" parameterType="long" resultMap="com.holacampus.api.mappers.PhotoContainerMapper.pContainerResult">
        select  P.PhotoContainerID as pc_id,
                P.Type as pc_type,
                P.UserID as pc_owner_id
        from photo_container P
            where UserID = #{id}
    </select>
    
    <select id="getProfilePhotoContainer" parameterType="long" resultMap="com.holacampus.api.mappers.ProfilePhotoContainerMapper.ppContainerResult">
        select  P.ProfilePhotoID    as ppc_id,
                P.Type              as ppc_type,
                P.UserID            as ppc_owner_id,
                P.PhotoID           as ppc_photo_id
        from profile_photo P
            where UserID = #{id}
    </select>
    
    <select id="getPermissions" parameterType="map" statementType="CALLABLE">
        CALL getUserPermissions(
            #{ currentUserId,          mode=IN,     javaType=Long,                  jdbcType=INTEGER},
            #{ userId,                 mode=IN,     javaType=Long,                  jdbcType=INTEGER},
            #{ permission.level,       mode=OUT,    javaType=String,                jdbcType=VARCHAR}
        )
    </select>
    
    <insert id="createUser" parameterType="map" statementType="CALLABLE">
        CALL newUser( 
            #{ user.name.firstName, mode=IN, javaType=String, jdbcType=VARCHAR},
            #{ user.name.lastName,  mode=IN, javaType=String, jdbcType=VARCHAR},
            #{ user.email,          mode=IN, javaType=String, jdbcType=VARCHAR},
            #{ user.userType,       mode=IN, javaType=String, jdbcType=VARCHAR},
            #{ user.birthDate,      mode=IN, javaType=java.sql.Date, jdbcType=DATE},
            #{ user.gender,         mode=IN, javaType=String, jdbcType=VARCHAR},
            #{ user.id,             mode=OUT, javaType=Long, jdbcType=INTEGER}
        )
    </insert>
    
    <delete id="deleteUser" parameterType="map">
        delete from active_element
            where ActiveElementID = #{id}
    </delete>
</mapper>