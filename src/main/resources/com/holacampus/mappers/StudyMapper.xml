<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.holacampus.api.mappers.StudyMapper">
    
    <resultMap id="studyResult" type="Study">
        <id column="study_id" property="id" />
        <result column="study_name" property="name" />
        <result column="study_description" property="description"/>
         <association property="university" column="uni_id" javaType="University" 
                     resultMap="com.holacampus.api.mappers.UniversityMapper.universityEmbeddedResult" />
    </resultMap>
    
    <select id="getStudies" parameterType="map" resultMap="studyResult">
        select  S.StudyID           as study_id,
                S.Name              as study_name,
                S.Description       as study_university,
        
                U.UniversityID      as uni_id,
                U.Name              as uni_name,
                
                P.PhotoID           as photo_e_id,
                P.Title             as photo_e_title,
                P.Url               as photo_e_url,
                P.ThumbnailUrl      as photo_e_t_url,
                P.CreationDate      as photo_e_date
        
        from study S
            left join university U
                on S.UniversityID = U.UniversityID
            left join profile_photo PP
                on U.UniversityID = PP.UniversityID
            left join photo P
                on PP.PhotoID = P.PhotoID
        where S.UniversityID = #{university.id}
        <if test="q != null">
                AND S.Name LIKE #{q}
        </if>
    </select>
    
    <select id="getTotalStudies" parameterType="map" resultType="int">
        select  COUNT(S.StudyID)
        from study S
        where S.UniversityID = #{university.id}
        <if test="q != null">
                AND S.Name LIKE #{q}
        </if>
    </select>
    
    <select id="getStudy" parameterType="map" resultMap="studyResult">
         select  S.StudyID           as study_id,
                S.Name              as study_name,
                S.Description       as study_university,
        
                U.UniversityID      as uni_id,
                U.Name              as uni_name,
                
                P.PhotoID           as photo_e_id,
                P.Title             as photo_e_title,
                P.Url               as photo_e_url,
                P.ThumbnailUrl      as photo_e_t_url,
                P.CreationDate      as photo_e_date
        
        from study S
            left join university U
                on S.UniversityID = U.UniversityID
            left join profile_photo PP
                on U.UniversityID = PP.UniversityID
            left join photo P
                on PP.PhotoID = P.PhotoID
        where S.UniversityID = #{university.id} AND S.StudyID = #{studyId}
               
    </select>
    
    
    <insert id="createStudy" parameterType="map" useGeneratedKeys="true" keyProperty="study.id">
        insert into study (
            UniversityID,
            Name,
            Description
        ) values (
            #{ university.id}
            #{ study.name},
            #{ study.description}
        )
    </insert>
    
    <update id="updateStudy" parameterType="map">
        update city
        <set>
            <if test="study.name != null"> Name = #{ study.name},</if>
            <if test="study.description != null"> Description = #{ study.description}</if>
            
        </set>
        where UniversityID = #{ university.id} AND StudyID = #{ study.id}
    </update>
    
    <delete id="deleteStudy" parameterType="map">
        delete from city
            where UniversityID = #{ university.id} AND StudyID = #{ studyId}
    </delete>
    
</mapper>